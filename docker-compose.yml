version: '3'

networks:
  monitor-net:
    driver: overlay

volumes:
    prometheus_data: {}
    grafana_data: {}
    elastic_data: {}

services:

  prometheus:
    image: ashdev/prometheus
    volumes:
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
      - '-storage.local.memory-chunks=100000'
    ports:
      - 9090:9090
    networks:
      - monitor-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.50'
          memory: 128M

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - user.config
    ports:
      - 3000:3000
    networks:
      - monitor-net
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.50'
          memory: 64M
        reservations:
          cpus: '0.50'
          memory: 32M

  alertmanager:
    image: ashdev/alertmanager
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - monitor-net
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.01'
          memory: 32M
        reservations:
          cpus: '0.01'
          memory: 16M

  nodeexporter:
    image: prom/node-exporter
    networks:
      - monitor-net
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 32M
        reservations:
          cpus: '0.10'
          memory: 16M

  cadvisor:
    image: google/cadvisor:v0.25.0
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitor-net
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 128M
        reservations:
          cpus: '0.10'
          memory: 64M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - network.host=0.0.0.0
      - discovery.zen.minimum_master_nodes=1
      - discovery.zen.ping.unicast.hosts=elasticsearch
    ports:
      - 9200:9200
    networks:
      - monitor-net
    deploy:
      mode: global
      resources:
        limits:
          cpus: '0.10'
          memory: 512M
        reservations:
          cpus: '0.10'
          memory: 128M
